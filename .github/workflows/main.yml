name: tests
on: [push]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # https://github.com/cypress-io/github-action
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Deploy Report to GitHub Pages 
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./projects/uu8h1r/
          publish_branch: gh-pages
          force_orphan: true




































# name: Cypress Cloud Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# permissions:
#   contents: write
#   pages: write
#   id-token: write
#   pull-requests: write

# jobs:
#   cypress-run:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#         with:
#           token: ${{ secrets.PAT_TOKEN }}
#           persist-credentials: true

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 22.13.1
#           cache: "npm"

#       - name: Install dependencies
#         run: npm ci

#       - name: Cypress run with Dashboard
#         run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
#         env:
#           # Use GitHub Actions variables for better Cypress Cloud integration
#           GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

#       - name: Create redirect HTML
#         if: always()
#         run: |
#             # Create directory for GitHub Pages
#             mkdir -p _site
            
#             # Get the Cypress run URL from the logs
#             CYPRESS_RUN_URL=$(grep -o 'https://cloud.cypress.io/projects/uu8h1r/runs/[0-9]*' <<< "$(cat cypress-run.log 2>/dev/null || echo '')" | tail -1)
            
#             # If we couldn't find the URL in logs, use the project URL
#             if [ -z "$CYPRESS_RUN_URL" ]; then
#               CYPRESS_RUN_URL="https://cloud.cypress.io/projects/uu8h1r/runs"
#             fi
            
#             # Create index page with automatic redirect
#             echo "<!DOCTYPE html>
#             <html>
#             <head>
#                 <title>Redirecting to Cypress Cloud Report</title>
#                 <meta http-equiv=\"refresh\" content=\"0; URL='${CYPRESS_RUN_URL}'\" />
#             </head>
#             <body>
#                 <p>If you are not redirected automatically, <a href=\"${CYPRESS_RUN_URL}\">click here to view the Cypress Test Report</a>.</p>
#             </body>
#             </html>" > _site/index.html
        
#       - name: Deploy to GitHub Pages
#         if: always()
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#             github_token: ${{ secrets.GITHUB_TOKEN }}
#             publish_dir: ./_site
#             publish_branch: reports




      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    publish_branch: gh-pages #your-branch  # default: gh-pages



      # - name: Create reports page with dashboard link
      #   if: always()
      #   run: |
      #       # Configure git with PAT for push access
      #       git config --global user.name "GitHub Actions Bot"
      #       git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
      #       # Create new branch or switch to it
      #       git fetch origin reports || true
      #       git checkout reports || git checkout -b reports
            
      #       # Create GitHub Pages directory
      #       mkdir -p github-pages
            
      #       # Create index page with link to Cypress Dashboard
      #       echo "<!DOCTYPE html>
      #       <html>
      #       <head>
      #           <title>Cypress Test Reports</title>
      #           <style>
      #               body { font-family: Arial, sans-serif; margin: 20px; }
      #               h1 { color: #333; }
      #               .report-link { margin: 10px 0; }
      #           </style>
      #       </head>
      #       <body>
      #           <h1>Cypress Test Reports</h1>
      #           <div class='report-link'>
      #               <a href='https://cloud.cypress.io/projects/uu8h1r/runs'>View Latest Test Results in Cypress Cloud</a>
      #           </div>
      #           <div>
      #               <p>Last updated: $(date)</p>
      #           </div>
      #       </body>
      #       </html>" > github-pages/index.html
            
      #       # Add all files
      #       git add -A
            
      #       # Commit changes
      #       git commit -m "Add test report link from GitHub Actions run ${GITHUB_RUN_ID}" || echo "No changes to commit"
            
      #       # Push to reports branch
      #       git push origin reports

      # - name: Update PR description with report link
      #   if: github.event_name == 'pull_request' && always()
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.PAT_TOKEN }}
      #     script: |
      #       const { owner, repo, number } = context.issue;
      #       const reportUrl = `https://dashboard.cypress.io/projects/your-project-id-here/runs`;

      #       // Get current PR description
      #       const { data: pullRequest } = await github.rest.pulls.get({
      #         owner,
      #         repo,
      #         pull_number: number,
      #       });

      #       let body = pullRequest.body || '';

      #       // Add report link if not already present
      #       if (!body.includes('Test Report')) {
      #         body += `\n\n## Test Report\n[View the Cypress Test Results](${reportUrl})`;
              
      #         await github.rest.pulls.update({
      #           owner,
      #           repo,
      #           pull_number: number,
      #           body,
      #         });
      #       }
